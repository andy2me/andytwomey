import React, { FC, useCallback, useRef } from 'react';
import { m, transform, useCycle } from 'framer-motion';

export const IllustrationHand: FC<JSX.IntrinsicElements['svg']> = (props) => {
  return (
    <svg width="122" height="122" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M88.453 58.995c1.694-8.553 5.648-18.075 13.879-18.075 3.955 0 7.102 2.259 7.102 5.971 0 1.453-.484 2.905-.969 4.68-.08.404-.242.727-.322 1.13-2.744 8.15-2.906 10.41-2.906 17.108v2.663c0 18.075-15.09 34.376-32.923 34.376-9.926 0-14.848-5.407-21.465-12.67-1.937-2.178-4.035-4.518-6.537-6.94-3.147-3.066-9.683-7.02-14.767-9.844-5.649-3.228-10.975-6.214-10.975-11.459 0-3.228 2.663-5.487 5.73-5.487 2.824 0 5.648 1.614 7.988 2.905.485.242 1.776.968 3.47 1.937 3.148 1.856 7.505 4.276 9.2 5.084-4.52-4.277-11.46-10.652-16.624-15.01-3.47-3.066-6.617-5.649-6.617-9.845 0-3.228 2.905-6.213 5.972-6.213 2.582 0 5.406 1.856 8.15 3.954 2.017 1.694 13.638 12.023 17.672 15.574-4.196-5.649-13.234-18.076-15.17-20.739-2.098-2.986-3.632-6.052-3.632-8.715 0-3.712 3.309-6.778 6.779-6.778 2.986 0 5.648 2.259 8.07 5.648l16.784 23.24c-1.21-5.003-5.407-19.609-6.778-23.643-.969-2.905-1.614-5.407-1.614-7.505 0-3.631 2.905-6.617 6.375-6.617 2.098 0 4.196 1.291 5.81 3.55 2.017 2.825 4.277 9.523 6.456 16.14 1.613 4.842 3.227 9.683 4.68 12.83 1.775 3.228 4.358 8.716 7.182 12.75Z" fill="#FFEA79"/><path d="M92.162 15.985c0-1.05.968-2.018 1.936-2.018.565 0 1.05.323 1.453.646 4.357 4.841 6.859 11.297 6.859 17.833 0 .969-.081 2.099-.162 3.067-.08.968-.968 1.695-1.855 1.695-1.453 0-2.018-.969-2.018-2.18 0-.403.08-.806.08-1.21.082-.403.081-.887.081-1.29 0-5.488-2.098-11.137-5.81-15.252-.403-.404-.564-.807-.564-1.291ZM22.763 66.097c0 2.663 3.793 4.922 7.747 7.262.403.323.807.484 1.21.727 5.568 3.066 12.185 7.1 15.736 10.41 2.663 2.582 4.842 5.002 6.778 7.262 5.891 6.536 10.007 11.136 18.48 11.136 17.269 0 28.889-15.413 28.889-30.342V69.97c0-7.02.161-9.684 3.147-18.48.646-1.855 1.21-3.389 1.21-4.357 0-1.533-.968-2.34-3.066-2.34-4.761 0-8.15 4.6-9.926 14.041-.565 3.39-1.856 5.326-3.873 5.326-1.13 0-2.26-.807-3.228-2.179-2.26-3.147-5.73-10.087-7.666-14.767-1.291-3.067-3.066-8.07-4.842-12.992-2.42-6.779-4.76-13.396-5.648-14.606-.888-1.21-1.856-2.098-2.825-2.098-1.21 0-2.501 1.29-2.501 3.066 0 1.21.403 2.905 1.21 5.084 1.21 4.035 3.47 12.024 5.245 18.157l1.937 6.778c.403 1.533.969 3.147.969 4.519 0 1.775-1.211 2.905-2.663 2.905-1.695 0-3.148-1.695-4.358-3.47L46.972 30.348c-2.098-2.985-3.632-4.034-4.761-4.034-1.372 0-2.905 1.21-2.905 3.066 0 1.856 1.29 4.277 2.743 6.375.484.726 16.704 22.837 17.592 24.128.726 1.13 1.291 2.179 1.291 3.147 0 1.533-1.533 2.825-3.066 2.825-1.695 0-3.632-1.534-5.407-3.148-1.372-1.29-7.263-6.455-12.104-10.651l-6.617-5.81c-2.18-1.937-3.793-3.148-5.165-3.148-1.13 0-2.42.969-2.42 2.421 0 .807.403 1.776 1.048 2.825 1.13 1.533 5.245 5.083 9.684 9.037C42.29 62.142 48.344 67.468 50.2 69.97c.726.968 1.21 2.017 1.21 2.986 0 1.372-1.13 2.501-2.824 2.501-1.534 0-3.47-.726-5.568-2.017-2.018-.968-7.102-3.793-10.007-5.487-1.049-.646-1.856-1.05-2.098-1.21-3.631-2.018-5.245-2.583-6.133-2.583-.968 0-2.017.726-2.017 1.937Zm-.807 20.093c0-.888.726-1.937 1.856-1.937.726 0 1.453.404 1.775 1.13 2.825 5.73 8.231 10.248 14.364 11.782.888.242 1.453 1.048 1.453 1.855 0 .969-.727 2.018-2.018 2.018-.161 0-.322-.081-.484-.081-7.343-1.936-13.557-7.101-16.865-13.88-.08-.322-.08-.564-.08-.887ZM18.89 65.935c0-3.228 2.663-5.487 5.73-5.487 2.823 0 5.648 1.614 7.988 2.905.484.242 1.775.968 3.47 1.937 3.147 1.856 7.505 4.276 9.2 5.084-4.52-4.277-11.46-10.652-16.624-15.01-3.47-3.066-6.617-5.649-6.617-9.845 0-3.228 2.905-6.213 5.971-6.213 2.583 0 5.407 1.856 8.15 3.954 2.018 1.694 13.638 12.023 17.673 15.574-4.196-5.649-13.234-18.076-15.17-20.739-2.099-2.986-3.632-6.052-3.632-8.715 0-3.712 3.308-6.778 6.778-6.778 2.986 0 5.649 2.259 8.07 5.648l16.785 23.24c-1.21-5.003-5.407-19.609-6.779-23.643-.968-2.905-1.614-5.407-1.614-7.505 0-3.631 2.905-6.617 6.375-6.617 2.098 0 4.196 1.291 5.81 3.55 2.018 2.825 4.277 9.523 6.456 16.14 1.614 4.842 3.228 9.683 4.68 12.83 1.534 3.309 4.116 8.796 6.94 12.831C90.225 50.522 94.18 41 102.41 41c3.954 0 7.101 2.26 7.101 5.972 0 1.452-.484 2.905-.968 4.68-.081.404-.242.726-.323 1.13-2.744 8.15-2.905 10.41-2.905 17.107v2.663c0 18.076-15.09 34.377-32.924 34.377-9.926 0-14.848-5.407-21.465-12.67-1.937-2.178-4.035-4.519-6.536-6.94-3.148-3.066-9.684-7.02-14.768-9.844-5.406-3.39-10.732-6.375-10.732-11.54Zm-5.165 24.048c0-.969.726-1.856 1.856-1.856.807 0 1.614.484 1.856 1.29 2.017 6.134 6.778 11.217 12.75 13.638.726.323 1.13.969 1.13 1.695 0 .968-.646 2.017-1.937 2.017-.242 0-.484-.08-.726-.161-6.94-2.905-12.508-8.877-14.929-16.059.08-.08 0-.322 0-.564Zm77.549-52.776c-.969 0-1.856-.887-1.856-1.936-.162-6.375-3.147-12.67-7.99-16.866a2.205 2.205 0 0 1-.645-1.533c0-1.049.888-1.856 1.856-1.856.485 0 .888.162 1.21.404 5.892 4.841 9.362 12.346 9.362 19.85 0 1.05-.888 1.938-1.937 1.938Z" fill="#333"/></svg>

  )
}

function templateIllustrationTorch({ rotate, x, y }) {
  return `rotate(${rotate}) translateX(${x}) translateY(${y})`
}
export const AnimatedIllustrationTorch = (props) => {
  const [torchJiggleOriginal, cycleTorchJiggle] = useCycle(0, 0.7, 0.2, 0.9, 0.4, 1, 0.3, 0.8);
  const torchJiggleDeg = transform(torchJiggleOriginal, [0,1], [-1, 1.5]);
  const torchJiggleX = transform(Math.ceil(torchJiggleOriginal * 100) % 40, [0,100], [-2, 2]);
  const torchJiggleY = transform(Math.ceil(torchJiggleOriginal * 100) % 60, [0,100], [-2, 2]);

  const intervalRef = useRef<number>()

  const onInteractStart = useCallback(() => {
    window.clearInterval(intervalRef.current);
    intervalRef.current = window.setInterval(() => {
      cycleTorchJiggle();
    }, 210);
  }, [intervalRef, cycleTorchJiggle]);

  const onInteractEnd = useCallback(() => {
    window.clearInterval(intervalRef.current);
  }, [intervalRef]);

  return (
    <div {...props}>
      <m.div
        transition={{ duration: 0.2 }}
        transformTemplate={templateIllustrationTorch}
        animate={{ rotate: torchJiggleDeg, x: torchJiggleX, y: torchJiggleY }}
        style={{ rotate: 0, x: 0, y: 0 }}
      >
        <IllustrationHand
          onTouchStartCapture={onInteractStart}
          onTouchEndCapture={onInteractEnd}
          onMouseEnter={onInteractStart}
          onMouseLeave={onInteractEnd}
        />
      </m.div>
    </div>
  )
}
