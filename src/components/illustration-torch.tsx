import React, { FC, useCallback, useRef } from 'react';
import { m, transform, useCycle } from 'framer-motion';

export const IllustrationTorch: FC<JSX.IntrinsicElements['svg']> = (props) => {
  return (
    <svg
      width="138"
      height="138"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      role="presentation"
      {...props}
    >
      <path
        d="M52.676 68.421c-3.718-2.212-7.826-5.99-7.826-5.99s2.154-3.05 2.535-3.622c1.97-2.963 5.042-6.085 8.359-7.365 5.071-1.957 11.2-1.426 15.557-4.891 5.678-4.516 11.361-8.76 17.353-12.797 2.005-1.35 3.93-2.406 5.748-4.01 1.961-1.73 3.727-3.59 6.079-4.834 1.789-.947 3.878-2.16 5.361-3.583.693-.666 1.899-1.364 2.772-1.869l.088-.05c.645-.374 1.345-.965 2.031-1.21 4.799-1.709 8.205.304 11.789 4.124 1.931 2.058 3.445 4.427 5.416 6.455 1.262 1.299 2.335 4.916 1.935 6.768-.363 1.678-.983 3.283-2.059 4.636-1.617 2.033-2.771 4.408-4.476 6.37-1.751 2.013-2.526 2.768-4.592 4.408-1.446 1.148-2.76 1.857-4.352 2.758-4.089 2.314-7.837 5.465-11.689 8.19-2.065 1.461-3.898 3.245-5.844 4.92-2.35 2.022-4.682 3.695-7.212 5.431-1.09.748-2.096 1.638-3.22 2.318-.938.568-1.145 1.549-1.864 2.289-1.094 1.126-.774 2.569-1.133 3.995-1.382 5.483-5.746 8.487-9.423 12.271-1.33 1.37-3.239 2.969-5.167 3.384-2.053.442-2.498-.951-2.93-2.616-.434-1.678-.45-3.398-1.05-5.062-1.193-3.317-2.69-6.598-4.034-9.868-1.641-3.992-4.463-8.355-8.152-10.55z"
        fill="#FFF9D7"
      />
      <path
        d="M41.249 61.74c.141.836.89 1.07 1.472 1.435 9.71 6.229 15.767 15.23 19.68 25.868.162.442.256.91.398 1.364.394 1.3 1.19 1.39 2.126.601 2.554-2.124 5.143-4.211 7.385-6.68 1.066-1.178 1.817-2.636 1.915-4.15.297-4.518 3.392-7.29 6.472-9.634 11.61-8.85 22.818-18.224 34.958-26.368 1.279-.86 2.535-1.767 3.702-2.775 3.298-2.85 4.355-6.854 2.845-10.95-1.452-3.919-3.968-6.992-7.679-9.01-.733-.396-1.475-.769-2.161-1.231-.718-.486-1.293-1.148-1.018-2.084.308-1.042 1.164-1.448 2.192-1.484 1.085-.04 2.113.264 3.107.674 6.873 2.84 11.907 11.344 11.102 18.717-.404 3.676-2.475 6.384-5.141 8.657-1.896 1.616-3.932 3.081-6.017 4.432-8.984 5.817-17.185 12.679-25.72 19.106-3.314 2.5-6.438 5.27-10.076 7.31-1.116.623-1.457 1.426-1.465 2.576-.005 4.491-2.281 7.913-5.328 10.887-3.828 3.736-8.088 6.967-12.214 10.355-2.545 2.087-5.175 2.099-7.98.824-2.623-1.19-4.954-2.87-6.996-4.852-6.472-6.285-11.462-13.501-14.304-22.216-1.748-5.365-.176-9.702 3.445-13.294 4.4-4.368 9.71-7.595 15.338-10.226 1.741-.816 3.625-1.135 5.555-.666.851.203 1.58.621 1.72 1.574.137.981-.5 1.53-1.29 1.903-.536.25-1.09.48-1.666.622-5.47 1.339-9.718 4.82-14.09 8.077-.144.125-.174.42-.267.638zm-5.072 8.515c.185.75.318 1.704.67 2.584 3.276 8.33 8.19 15.494 15.256 21.093 1.027.817 2.167 1.484 3.423 1.857 1.934.576 2.982-.194 2.99-2.235.004-1.432-.36-2.816-.856-4.163-2.995-8.075-7.82-14.878-14.33-20.492-1.355-1.166-2.812-2.213-4.528-2.783-2.022-.67-2.883.011-2.847 2.189.013.59.135 1.177.222 1.95z"
        fill="#111"
      />
      <path
        d="M64.607 51.269c-.78.096-1.34-.012-1.77-.503-.547-.623-.483-1.313-.133-1.98.73-1.41 1.98-2.353 3.15-3.339 6.447-5.437 13.278-10.354 20.23-15.11 5.773-3.95 11.623-7.782 17.435-11.673 1.084-.726 2.106-1.564 3.406-1.871.856-.196 1.659-.064 2.236.691.595.781.396 1.574-.048 2.322-.617 1.052-1.581 1.764-2.56 2.429-3.632 2.459-7.203 5.023-10.935 7.318-9.515 5.849-18.548 12.36-27.287 19.285-1.205.956-2.366 1.998-3.724 2.43zM119.741 35.77c.306 1.849.093 3.237-.645 4.519-.373.656-.948 1.057-1.744 1.011-.832-.047-1.373-.592-1.469-1.327-.7-5.63-4.234-9.376-8.356-12.755-.982-.803-1.727-1.783-.953-3.064.785-1.296 2.027-1.138 3.128-.486 4.898 2.923 8.062 7.26 10.039 12.101zM78.189 69.306c.222 1.054.196 1.883-.702 2.346-.905.464-1.616-.023-2.189-.67-.465-.53-.87-1.133-1.234-1.737-2.7-4.502-5.956-8.57-9.576-12.36-.326-.343-.678-.673-.952-1.053-.453-.625-.555-1.31-.112-1.984.534-.814 1.345-1.023 2.18-.659.749.322 1.52.74 2.1 1.3 4.011 3.919 7.64 8.134 9.95 13.324.236.539.406 1.117.535 1.493zM16.442 76.671c1.752-.672 3.66-.67 5.544-.693 1.104-.014 2.239.286 2.463 1.564.235 1.348-.797 1.87-1.898 2.114-5.662 1.234-11.256 2.695-16.61 4.976-.992.42-2.195.66-2.832-.54-.629-1.195.248-2.037 1.152-2.632 2.88-1.905 6.054-3.187 9.363-4.138.909-.27 1.843-.435 2.818-.65zM91.502 38.934c.226.865-.03 1.53-.486 2.084-.522.631-1.08 1.26-1.708 1.78-2.99 2.494-6.001 4.949-9.01 7.418-1.168.957-2.45 1.716-3.726.327-1.206-1.314-.513-2.646.393-3.826.426-.556.958-1.044 1.515-1.471 2.626-2 5.26-3.986 7.924-5.933.952-.697 1.972-1.332 3.182-1.443.905-.081 1.618.246 1.916 1.064zM46.66 108.447c-.118.591-.171 1.554-.488 2.418a761.315 761.315 0 01-4.754 12.568c-.437 1.13-1.094 2.289-2.572 1.802-1.24-.404-1.244-1.625-1.093-2.699.132-.926.389-1.845.685-2.741 1.303-3.915 2.645-7.815 3.957-11.725.408-1.218 1.023-2.197 2.494-1.962 1.063.167 1.558.958 1.77 2.339zM23.634 105.385c-1.13-.011-1.776-.581-1.64-1.74.066-.553.376-1.112.7-1.586 1.74-2.536 3.85-4.759 6.03-6.914.477-.47 1.17-.776 1.814-1.03.57-.22 1.177-.055 1.634.381.585.552.664 1.276.313 1.935a10.087 10.087 0 01-1.415 2.019c-1.753 1.902-3.555 3.769-5.358 5.628-.565.595-1.198 1.122-2.078 1.307z"
        fill="#111"
      />
    </svg>
  )
}

function templateIllustrationTorch({ rotate, x, y }) {
  return `rotate(${rotate}) translateX(${x}) translateY(${y})`
}
export const AnimatedIllustrationTorch = (props) => {
  const [torchJiggleOriginal, cycleTorchJiggle] = useCycle(0, 0.7, 0.2, 0.9, 0.4, 1, 0.3, 0.8);
  const torchJiggleDeg = transform(torchJiggleOriginal, [0,1], [-1, 1.5]);
  const torchJiggleX = transform(Math.ceil(torchJiggleOriginal * 100) % 40, [0,100], [-2, 2]);
  const torchJiggleY = transform(Math.ceil(torchJiggleOriginal * 100) % 60, [0,100], [-2, 2]);

  const intervalRef = useRef<number>()

  const onInteractStart = useCallback(() => {
    window.clearInterval(intervalRef.current);
    intervalRef.current = window.setInterval(() => {
      cycleTorchJiggle();
    }, 210);
  }, [intervalRef, cycleTorchJiggle]);

  const onInteractEnd = useCallback(() => {
    window.clearInterval(intervalRef.current);
  }, [intervalRef]);

  return (
    <div {...props}>
      <m.div
        transition={{ duration: 0.2 }}
        transformTemplate={templateIllustrationTorch}
        animate={{ rotate: torchJiggleDeg, x: torchJiggleX, y: torchJiggleY }}
        style={{ rotate: 0, x: 0, y: 0 }}
      >
        <IllustrationTorch
          onTouchStartCapture={onInteractStart}
          onTouchEndCapture={onInteractEnd}
          onMouseEnter={onInteractStart}
          onMouseLeave={onInteractEnd}
        />
      </m.div>
    </div>
  )
}
